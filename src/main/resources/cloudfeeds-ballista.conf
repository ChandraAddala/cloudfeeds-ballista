appConfig {

  # the region of the data that is being exported
  region = "ord"

  #Number of days worth of data that is available in entries database. Optional field for other databases
  daysDataAvailable = 3

  #Location of the temporary gZip files
  tempOutputDir = "/var/lib/cloudfeeds-ballista"

  #Used by PreferencesDBQuery and EntriesDBQuery to set the max limit on the number of rows that needs to be exported.
  #For exporting all rows, set this value to "ALL"
  maxRowLimit = "ALL" //set this value to "ALL" for all rows

  export {
    from {

      dbs {

        #db name that needs to be exported. Must be a unique name under dbs.
        prefs {
          #Driver class
          driverClass = "org.postgresql.Driver"

          #jdbc URL
          jdbcUrl = "jdbc:postgresql://localhost:5432/"

          #user name
          user = "user"

          #password
          password = "password"

          #Location of the output file on the remote server(HDFS)
          outputFileLocation = "/etl/prefs/"

          #File name prefix to the output file name
          fileNamePrefix = ${appConfig.region}

          #The class that extends the interface DBQuery which contains the query to be run to extract data from database.
          queryClass = com.rackspace.feeds.ballista.queries.PreferencesDBQuery

          #When this field is set to true, app stores the final output file under $outputFileLocation/$runDate (run date
          #in yyyy-MM-dd format) with the file name also containing date in it. When set to false, neither of these things
          #happen and the output file gets stored under $outputFileLocation directly. When set to true _SUCCESS file is 
          #written to $outputFileLocation/$runDate/_SUCCESS and when set to false it is written to 
          #$outputFileLocation/_$runDate/_SUCCESS
          isOutputFileDateDriven=false
        }

        #db name that needs to be exported. Must be a unique name under dbs.
        newrelic {

          #Driver class
          driverClass = "org.postgresql.Driver"

          #jdbc URL
          jdbcUrl = "jdbc:postgresql://localhost:5432/"

          #user name
          user = "user"

          #password
          password = "password"

          #Location of the output file on the remote server(HDFS)
          outputFileLocation = "/etl/entries/"

          #File name prefix to the output file name
          fileNamePrefix = ${appConfig.region}

          #The class that extends the interface DBQuery which contains the query to be run to extract data from database.
          queryClass = com.rackspace.feeds.ballista.queries.EntriesDBQuery


          #When this field is set to true, app stores the final output file under $outputFileLocation/$runDate (run date
          #in yyyy-MM-dd format) with the file name also containing date in it. When set to false, neither of these things
          #happen and the output file gets stored under $outputFileLocation directly.
          isOutputFileDateDriven=true
        }

      }
    }

    to {

      hdfs {

        #Contains information needed to scp file to remote server.
        scp {
          #username
          user = "username"

          #host
          host = "host"

          #Integer with the value of port.
          port = 22 //integer

          #password required to scp. When password is not needed to scp, leave this field empty.
          password = ""

          #private key file path that needs to be used to scp. When private key is not needed to scp, leave this field empty.
          privateKeyFilePath = "/etc/cloudfeeds-ballista/cloudFeedsArchive_rsa"

          #private key pass phrase corresponding to the key used. When not needed to scp, leave this field empty.
          privateKeyPassPhrase = "passPhrase"
        }
      }

    }
  }

  log {

    #log config file.
    configFile = "logback.xml"
  }
}