buildscript {
    repositories {
        mavenLocal()
        maven { url "https://maven.research.rackspacecloud.com/content/repositories/snapshots/" }
        maven { url "https://maven.research.rackspacecloud.com/content/repositories/releases/" }
        mavenCentral()
        jcenter()
        maven { url 'https://oss.sonatype.org/content/groups/public' }
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:2.0.3'
    }
}

plugins {
    id 'net.researchgate.release' version '2.0.2'
}

apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: 'os-package-base'

repositories {
    mavenCentral()
    jcenter()
}

group = 'com.rackspace.feeds.ballista'
sourceCompatibility = 1.7

defaultTasks  'clean', 'build'

ext.app_name = 'cloudfeeds-ballista'
ext.rpmProps = [
        // our package name for the RPM
        package_name: 'cloudfeeds-ballista',

        // our app name used by the rpm stuff
        app_name: app_name,

        // path where our jars will be put on the system via the rpm/deb
        prefix_path: '/opt/' + app_name,

        // path where our configs will be put on the system via the rpm/deb
        config_path: '/etc/' + app_name,

        // user for the service, created via the preinstall.sh script
        app_user: 'ballista',

        // group for the service, created via the preinstall.sh script
        app_group: 'ballista'
]

dependencies {
    compile 'org.scala-lang:scala-library:2.10.4'
    compile 'org.scala-lang:scala-reflect:2.10.4'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'ch.qos.logback:logback-core:1.1.2'
    compile 'org.slf4j:jcl-over-slf4j:1.7.7'
    compile 'com.typesafe:config:1.2.1'
    compile 'joda-time:joda-time:2.6'
    compile 'org.joda:joda-convert:1.7'
    compile 'org.postgresql:postgresql:9.3-1102-jdbc41'
    compile "org.apache.commons:commons-dbcp2:2.0.1"
    compile "com.github.scopt:scopt_2.10:3.0.0"
    compile 'org.scala-lang:scala-reflect:2.10.4'
    compile 'com.jcraft:jsch:0.1.51'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-dbutils:commons-dbutils:1.6'

    testCompile 'junit:junit:4.11'
    testCompile 'org.scalatest:scalatest_2.10:2.1.7'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'com.h2database:h2:1.4.182'
    testCompile 'org.apache.mina:mina-core:2.0.9'
    testCompile 'org.apache.sshd:sshd-core:0.14.0'

}


// defaults for rpm/deb packaging
ospackage {
    os = LINUX
    packageName = rpmProps.package_name
    packageGroup = 'Application/System'
    packageDescription = 'This is the cloudfeeds ballista application'
    url = 'https://github.com/rackerlabs/cloudfeeds-ballista'

    // pre and post scriptlets
    preInstall file('src/main/resources/preinstall.sh')
    postInstall file('src/main/resources/postinstall.sh')

    directory(rpmProps.config_path, 755)
    directory(rpmProps.prefix_path, 755)
    directory(rpmProps.prefix_path + '/lib', 755)
    directory(rpmProps.prefix_path + '/bin', 755)

    // copy config files
    from('src/main/resources') {
        into rpmProps.config_path
        include 'cloudfeeds-ballista.conf'
        include 'logback.xml'
        user rpmProps.app_user
        permissionGroup rpmProps.app_group
        fileMode 0644
        fileType CONFIG | NOREPLACE
    }
    
    into rpmProps.prefix_path

    // pull our init script
    from('src/main/resources') {
        into 'bin'
        include 'cloudfeeds-ballista.sh'
        include 'cloudfeeds-ballista_start.sh'
        user rpmProps.app_user
        permissionGroup rpmProps.app_group
        fileMode 0755
    }

    // collect our jars
    from('build/libs') {
        into 'lib'
        user rpmProps.app_user
        permissionGroup rpmProps.app_group
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

// task to create one uber executable jar
task uberjar(type: Jar) {
    from sourceSets.main.output
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    manifest {
        attributes 'Main-Class': 'com.rackspace.feeds.ballista.AppMain'
    }
}

// task to create RPM
task buildRpm(type: Rpm, dependsOn: 'uberjar') {

}

buildRpm.doFirst {
    if (project.version.contains('SNAPSHOT')) {
        release = 'SNAPSHOT'
        version = project.version.minus("-SNAPSHOT")
    } else {
        release = 1
        version = project.version
    }

    def version_jar = rpmProps.package_name + '-' + project.version + '.jar'
    
    // create a symlink to named <app_name>.jar to the versioned jar
    link(rpmProps.prefix_path + '/lib/' + rpmProps.app_name + '.jar', rpmProps.prefix_path + '/lib/' + version_jar)
}

artifacts {
    archives(buildRpm) {
        name   project.name
        type   'rpm'
        builtBy buildRpm
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            // nexusUsername and nexusPassword are passed in via -P option when gradle is run
            repository(url: "https://maven.research.rackspacecloud.com/content/repositories/releases/") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(url: "https://maven.research.rackspacecloud.com/content/repositories/snapshots/") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            pom.groupId    = project.group
            pom.artifactId = project.name
            pom.version    = project.version.minus('-SNAPSHOT')
        }
    }
}

release {
    failOnPublishNeeded = false
    failOnCommitNeeded = false
    failOnUnversionedFiles = false
    tagPrefix = 'cloudfeeds-ballista'
    // for testing on dev boxes
    //git.requireBranch = ''
}

createReleaseTag.dependsOn uploadArchives